workspace(name="rules_intellij_generate_scenarios")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

maven_jar(name="com_google_guava_guava",         artifact="com.google.guava:guava:19.0")
maven_jar(name="com_google_auto_value",          artifact="com.google.auto.value:auto-value:1.5.2")

local_repository(
    name = "rules_intellij_generate",
    path = "../rules",
)

rules_junit5_sha = "e86a061d86ccb695f705d32c70804f9dc2f4d760"
http_archive(
    name = "rules_junit5",
    url = "https://github.com/sconover/rules_junit5/archive/%s.tar.gz" % rules_junit5_sha,
    strip_prefix = "rules_junit5-%s" % rules_junit5_sha,
)
load("@rules_junit5//:def.bzl", "junit5_repositories")
junit5_repositories()



# Also see comments in html_email.proto and associated BUILD file
#
# As of this writing, proper bazel support for "well known protos" is very new,
# therefore we are omitting grpc_java's (relatively old) protobuf deps,
# and substituting in a relatively recent google/protobuf sha, which includes
# the well known protos fix.
http_archive(
    name = "com_google_protobuf",
    strip_prefix = "protobuf-2df472690ec878ff75a2ccea0c7ff6df0ff69ee3",
    urls = ["https://github.com/google/protobuf/archive/2df472690ec878ff75a2ccea0c7ff6df0ff69ee3.zip"],
)
http_archive(
    name = "com_google_protobuf_java",
    strip_prefix = "protobuf-2df472690ec878ff75a2ccea0c7ff6df0ff69ee3",
    urls = ["https://github.com/google/protobuf/archive/2df472690ec878ff75a2ccea0c7ff6df0ff69ee3.zip"],
)

http_archive(
    name = "grpc_java",
    urls = ["https://github.com/grpc/grpc-java/archive/65ae83e479c26c1a7adef6ca4cfd9ce7b738a19e.zip"],
    strip_prefix = "grpc-java-65ae83e479c26c1a7adef6ca4cfd9ce7b738a19e",
)
load("@grpc_java//:repositories.bzl", "grpc_java_repositories")
grpc_java_repositories(
    omit_com_google_protobuf=True,
    omit_com_google_guava=True,
    omit_com_google_protobuf_java=True,
)


# see https://github.com/bazelbuild/rules_nodejs

# rules_nodejs depends on bazel_skylib
# Bazel doesn't support transitive workspace deps so you must copy this.
http_archive(
    name = "bazel_skylib",
    url = "https://github.com/bazelbuild/bazel-skylib/archive/0.3.1.zip",
    strip_prefix = "bazel-skylib-0.3.1",
    sha256 = "95518adafc9a2b656667bbf517a952e54ce7f350779d0dd95133db4eb5c27fb1",
)

git_repository(
    name = "build_bazel_rules_nodejs",
    remote = "https://github.com/bazelbuild/rules_nodejs.git",
    tag = "0.27.12", # 2019-04-09. check for the latest tag when you install
)

load("@build_bazel_rules_nodejs//:defs.bzl", "node_repositories")
load("@build_bazel_rules_nodejs//:defs.bzl", "npm_install")


# for all js/ts-related examples
http_archive(
    name = "node",
    url = "https://nodejs.org/dist/v10.14.2/node-v10.14.2-darwin-x64.tar.gz",
    strip_prefix = "node-v10.14.2-darwin-x64",
    build_file_content="""
exports_files([
    "bin/node",
])
"""
)

# 10_javascript
new_local_repository(
    name="node_modules_10_javascript",
    path="10_javascript/deps",
    build_file_content="""
exports_files([
    "package.json",
    "package-lock.json",
    "node_modules/mocha/bin/mocha",
])

filegroup(
    name = "all_files",
    srcs = glob([
        "node_modules/**",
    ]),
    visibility = ["//visibility:public"],
)
"""
)


# 11_typescript
new_local_repository(
    name="node_modules_11_typescript",
    path="11_typescript/deps",
    build_file_content="""
exports_files([
    "package.json",
    "package-lock.json",
    "node_modules/mocha/bin/mocha",
])

filegroup(
    name = "all_files",
    srcs = glob([
        "node_modules/**",
    ]),
    visibility = ["//visibility:public"],
)
"""
)

# 12_kotlin
rules_kotlin_version = "59dc7473c777b5054e91c1af6b95ed0ecbdc0ace" # 2019-04-01

http_archive(
    name = "io_bazel_rules_kotlin",
    urls = ["https://github.com/bazelbuild/rules_kotlin/archive/%s.zip" % rules_kotlin_version],
    type = "zip",
    strip_prefix = "rules_kotlin-%s" % rules_kotlin_version
)

load("@io_bazel_rules_kotlin//kotlin:kotlin.bzl", "kotlin_repositories", "kt_register_toolchains")
kotlin_repositories()
kt_register_toolchains()

# 15_typescript_rules_multi_tsc
new_local_repository(
    name="node_modules_15_typescript_rules_multi_tsc",
    path="15_typescript_rules_multi_tsc/deps",
    build_file_content="""
exports_files([
    "package.json",
    "package-lock.json",
    "node_modules/mocha/bin/mocha",
    "node_modules/typescript/lib/tsc.js",
])

filegroup(
    name = "all_files",
    srcs = glob([
        "node_modules/**",
    ]),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "default_typings",
    srcs = glob([
        "node_modules/@types/**",
    ]),
    visibility = ["//visibility:public"],
)
"""
)

rules_multi_tsc_version = "b4976c44357323aa6a69e26d8cee9ecc31a32fa1"

http_archive(
    name = "rules_multi_tsc",
    urls = ["https://github.com/sconover/rules_multi_tsc/archive/%s.zip" % rules_multi_tsc_version],
    type = "zip",
    strip_prefix = "rules_multi_tsc-%s/rules" % rules_multi_tsc_version
)
